#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Driver_list
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="driverlist")]
	public partial class driverlistDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertdriver(driver instance);
    partial void Updatedriver(driver instance);
    partial void Deletedriver(driver instance);
    #endregion
		
		public driverlistDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["driverlistConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public driverlistDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public driverlistDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public driverlistDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public driverlistDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<driver> drivers
		{
			get
			{
				return this.GetTable<driver>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.driver")]
	public partial class driver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _driverID;
		
		private string _driverName;
		
		private string _driverGender;
		
		private string _driverStatus;
		
		private string _driverAddress;
		
		private string _driverContact;
		
		private string _driverIC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndriverIDChanging(int value);
    partial void OndriverIDChanged();
    partial void OndriverNameChanging(string value);
    partial void OndriverNameChanged();
    partial void OndriverGenderChanging(string value);
    partial void OndriverGenderChanged();
    partial void OndriverStatusChanging(string value);
    partial void OndriverStatusChanged();
    partial void OndriverAddressChanging(string value);
    partial void OndriverAddressChanged();
    partial void OndriverContactChanging(string value);
    partial void OndriverContactChanged();
    partial void OndriverICChanging(string value);
    partial void OndriverICChanged();
    #endregion
		
		public driver()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driverID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int driverID
		{
			get
			{
				return this._driverID;
			}
			set
			{
				if ((this._driverID != value))
				{
					this.OndriverIDChanging(value);
					this.SendPropertyChanging();
					this._driverID = value;
					this.SendPropertyChanged("driverID");
					this.OndriverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driverName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string driverName
		{
			get
			{
				return this._driverName;
			}
			set
			{
				if ((this._driverName != value))
				{
					this.OndriverNameChanging(value);
					this.SendPropertyChanging();
					this._driverName = value;
					this.SendPropertyChanged("driverName");
					this.OndriverNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driverGender", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string driverGender
		{
			get
			{
				return this._driverGender;
			}
			set
			{
				if ((this._driverGender != value))
				{
					this.OndriverGenderChanging(value);
					this.SendPropertyChanging();
					this._driverGender = value;
					this.SendPropertyChanged("driverGender");
					this.OndriverGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driverStatus", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string driverStatus
		{
			get
			{
				return this._driverStatus;
			}
			set
			{
				if ((this._driverStatus != value))
				{
					this.OndriverStatusChanging(value);
					this.SendPropertyChanging();
					this._driverStatus = value;
					this.SendPropertyChanged("driverStatus");
					this.OndriverStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driverAddress", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string driverAddress
		{
			get
			{
				return this._driverAddress;
			}
			set
			{
				if ((this._driverAddress != value))
				{
					this.OndriverAddressChanging(value);
					this.SendPropertyChanging();
					this._driverAddress = value;
					this.SendPropertyChanged("driverAddress");
					this.OndriverAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driverContact", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string driverContact
		{
			get
			{
				return this._driverContact;
			}
			set
			{
				if ((this._driverContact != value))
				{
					this.OndriverContactChanging(value);
					this.SendPropertyChanging();
					this._driverContact = value;
					this.SendPropertyChanged("driverContact");
					this.OndriverContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_driverIC", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string driverIC
		{
			get
			{
				return this._driverIC;
			}
			set
			{
				if ((this._driverIC != value))
				{
					this.OndriverICChanging(value);
					this.SendPropertyChanging();
					this._driverIC = value;
					this.SendPropertyChanged("driverIC");
					this.OndriverICChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
